datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  username  String
  email     String    @unique
  password  String
  age       Int?
  addresses Address[]
  Role      Role[]    @relation(fields: [roleId], references: [id])
  roleId    String[]  @db.ObjectId
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Address {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  recipient   String
  address     String
  phoneNumber String
  User        User?     @relation(fields: [userId], references: [id])
  userId      String?   @db.ObjectId
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

model Role {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  userId      String[]     @db.ObjectId
  User        User[]       @relation(fields: [userId], references: [id])
  Permissions Permission[] @relation(fields: [permissions], references: [id])
  permissions String[]     @db.ObjectId
  createdAt   DateTime?    @default(now())
  updatedAt   DateTime?    @updatedAt
}

model Permission {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  roles       String[]  @db.ObjectId
  Role        Role[]    @relation(fields: [roles], references: [id])
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

model UserToken {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  token     String
  expireAt  DateTime
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
